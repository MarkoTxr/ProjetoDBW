<!DOCTYPE html>
<html lang="pt">
<head>
  <%- include('../partials/head') %>
</head>
<body>
  <%- include('../partials/header') %>

<div class="container main-content">
  <div class="row mb-4">
    <div class="col">
      <h1 class="text-center">Participar da Sessão</h1>
    </div>
  </div>

  <div class="row">
    <div class="col-md-10 offset-md-1">
      <div class="card bg-dark">
        <div class="card-header d-flex justify-content-between align-items-center">
          <h5 class="mb-0  text-bright"><%= sessao.tema %></h5>
          <span class="badge  <%= sessao.status === 'ativa' ? 'bg-success' : sessao.status === 'pausada' ? 'bg-warning' : sessao.status === 'concluida' ? 'bg-danger' : 'bg-secondary' %>">
            <%= sessao.status === 'ativa' ? 'Ativa' : sessao.status === 'pausada' ? 'Pausada' : sessao.status === 'concluida' ? 'Concluída' : 'Aguardando Início' %>
          </span>
        </div>
        <div class="card-body">
          <!-- Área de Participação -->
          <div id="participacaoArea">
            <div class="mb-4 text-bright">
              <h5 >Instruções</h5>
              <p>Aguarde o host iniciar a sessão. Quando a sessão estiver ativa, você poderá submeter suas ideias para cada nível.</p>
            </div>
            
            <div class="mb-4 text-bright">
              <h5>Participantes</h5>
              <div class="row">
                <% sessao.participantes.forEach(participante => { %>
                  <div class="col-md-3 mb-2">
                    <div class="d-flex align-items-center">
                      <img src="<%= participante.imagemPerfil || '/images/default-profile.png' %>" 
                           alt="<%= participante.nick || participante.nome %>" 
                           class="rounded-circle me-2" width="30" height="30">
                      <span><%= participante.nick || participante.nome %></span>
                    </div>
                  </div>
                <% }) %>
              </div>
            </div>
            
            <% if (sessao.status === 'aguardando_inicio') { %>
              <div class="alert alert-info ">
                <strong>Aguardando início da sessão...</strong>
                <% if (isHost) { %>
                  <div class="mt-2">
                    <button id="iniciarSessaoBtn" class="btn btn-success">Iniciar Sessão</button>
                  </div>
                <% } %>
              </div>
            <% } else if (sessao.status === 'pausada') { %>
              <div class="alert alert-warning">
                <strong>Sessão pausada pelo host</strong>
                <% if (isHost) { %>
                  <div class="mt-2">
                    <button id="continuarSessaoBtn" class="btn btn-success">Continuar Sessão</button>
                  </div>
                <% } %>
              </div>
            <% } else if (sessao.status === 'ativa') { %>
              <div id="nivelAtivo" class="mb-4 text-bright">
                <h5>Nível Atual: <span id="nivelAtualNum">1</span></h5>
                <div class="progress mb-2">
                  <div id="progressBar" class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: 100%"></div>
                </div>
                <p>Tempo restante: <span id="tempoRestante">60</span> segundos</p>
              </div>
              
              <div id="submissaoArea" class="mb-4 text-bright">
                <h5>Submeta suas ideias</h5>
                <form id="formSubmeterPalavras">
                  <div class="mb-3 ">
                    <textarea class="form-control" id="palavrasInput" rows="3" placeholder="Digite suas ideias separadas por vírgula"></textarea>
                  </div>
                  <button type="submit" class="btn btn-custom">Submeter Ideias</button>
                </form>
              </div>
              
              <% if (isHost) { %>
                <div class="mt-4 d-flex justify-content-between">
                  <button id="pausarSessaoBtn" class="btn btn-warning">Pausar Sessão</button>
                  <button id="concluirSessaoBtn" class="btn btn-danger">Concluir Sessão</button>
                </div>
              <% } %>
            <% } else if (sessao.status === 'concluida') { %>
              <div class="alert alert-danger">
                <strong>Esta sessão foi concluída</strong>
              </div>
            <% } %>
          </div>
        </div>
        <div class="card-footer">
          <a href="/sessoes/<%= sessao._id %>" class="btn btn-secondary">Voltar para Detalhes</a>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Variáveis para controle da sessão
    const sessaoId = '<%= sessao._id %>';
    const isHost = <%= isHost %>;
    
    // Botões de controle (apenas para o host)
    if (isHost) {
      const iniciarBtn = document.getElementById('iniciarSessaoBtn');
      const continuarBtn = document.getElementById('continuarSessaoBtn');
      const pausarBtn = document.getElementById('pausarSessaoBtn');
      const concluirBtn = document.getElementById('concluirSessaoBtn');
      
      if (iniciarBtn) {
        iniciarBtn.addEventListener('click', function() {
          iniciarSessao();
        });
      }
      
      if (continuarBtn) {
        continuarBtn.addEventListener('click', function() {
          iniciarSessao();
        });
      }
      
      if (pausarBtn) {
        pausarBtn.addEventListener('click', function() {
          pausarSessao();
        });
      }
      
      if (concluirBtn) {
        concluirBtn.addEventListener('click', function() {
          if (confirm('Tem certeza que deseja concluir esta sessão? Esta ação não pode ser desfeita.')) {
            concluirSessao();
          }
        });
      }
    }
    
    // Formulário de submissão de palavras
    const formSubmeterPalavras = document.getElementById('formSubmeterPalavras');
    if (formSubmeterPalavras) {
      formSubmeterPalavras.addEventListener('submit', function(e) {
        e.preventDefault();
        submeterPalavras();
      });
    }
    
    // Funções para controle da sessão
    function iniciarSessao() {
      fetch(`/sessoes/${sessaoId}/iniciar`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        }
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          alert('Sessão iniciada com sucesso!');
          location.reload();
        } else {
          alert('Erro ao iniciar sessão: ' + data.message);
        }
      })
      .catch(error => {
        console.error('Erro:', error);
        alert('Erro ao iniciar sessão. Tente novamente.');
      });
    }
    
    function pausarSessao() {
      fetch(`/sessoes/${sessaoId}/pausar`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        }
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          alert('Sessão pausada com sucesso!');
          location.reload();
        } else {
          alert('Erro ao pausar sessão: ' + data.message);
        }
      })
      .catch(error => {
        console.error('Erro:', error);
        alert('Erro ao pausar sessão. Tente novamente.');
      });
    }
    
    function concluirSessao() {
      fetch(`/sessoes/${sessaoId}/concluir`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        }
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          alert('Sessão concluída com sucesso!');
          location.reload();
        } else {
          alert('Erro ao concluir sessão: ' + data.message);
        }
      })
      .catch(error => {
        console.error('Erro:', error);
        alert('Erro ao concluir sessão. Tente novamente.');
      });
    }
    
    function submeterPalavras() {
      const palavrasInput = document.getElementById('palavrasInput');
      const palavras = palavrasInput.value.split(',').map(p => p.trim()).filter(p => p);
      
      if (palavras.length === 0) {
        alert('Por favor, digite pelo menos uma ideia.');
        return;
      }
      
      fetch(`/sessoes/${sessaoId}/submeter-palavras`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          nivel: 1, // Nível atual
          palavras: palavras
        })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          alert(`Ideias submetidas com sucesso! (${data.palavrasCount} ideias)`);
          palavrasInput.value = '';
        } else {
          alert('Erro ao submeter ideias: ' + data.message);
        }
      })
      .catch(error => {
        console.error('Erro:', error);
        alert('Erro ao submeter ideias. Tente novamente.');
      });
    }
    
    // Simulação de temporizador (apenas para demonstração)
    if (document.getElementById('tempoRestante')) {
      let tempo = 60;
      const tempoRestanteEl = document.getElementById('tempoRestante');
      const progressBar = document.getElementById('progressBar');
      
      const timer = setInterval(() => {
        tempo--;
        tempoRestanteEl.textContent = tempo;
        progressBar.style.width = (tempo / 60 * 100) + '%';
        
        if (tempo <= 0) {
          clearInterval(timer);
          alert('Tempo esgotado para este nível!');
        }
      }, 1000);
    }
  });
</script>

  <%- include('../partials/footer') %>
</body>
</html>
